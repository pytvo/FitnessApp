# Generated by Django 3.0 on 2024-02-05 16:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='exercises/')),
                ('description', models.TextField()),
                ('cal_per_min', models.IntegerField()),
                ('slug', models.SlugField(max_length=129)),
            ],
            options={
                'verbose_name': 'Exercise',
                'verbose_name_plural': 'Exercises',
            },
        ),
        migrations.CreateModel(
            name='MuscleGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='Muscles')),
                ('slug', models.SlugField(max_length=128)),
            ],
            options={
                'verbose_name': 'Muscle Group',
                'verbose_name_plural': 'Muscle Groups',
            },
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128)),
            ],
            options={
                'verbose_name': 'Gender',
                'verbose_name_plural': 'Genders',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=128, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254)),
                ('full_name', models.CharField(max_length=129)),
                ('country', models.CharField(max_length=120)),
                ('image', models.ImageField(upload_to='images/users/')),
                ('date_of_birth', models.DateField()),
                ('weight', models.IntegerField()),
                ('height', models.IntegerField()),
                ('steps_target', models.IntegerField(default=12000)),
                ('bmi', models.FloatField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('sex', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='FitnessAPI.Sex')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='UserWorkoutLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('duration', models.IntegerField()),
                ('calories', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Workout Log',
                'verbose_name_plural': 'User Workouts',
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('title', models.CharField(max_length=128)),
                ('stars', models.IntegerField()),
                ('comment', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Feedback',
                'verbose_name_plural': 'User Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='StepsCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('count', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Steps Count',
                'verbose_name_plural': 'Steps Counts',
            },
        ),
        migrations.CreateModel(
            name='NutritionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('food', models.CharField(max_length=129)),
                ('quantity', models.IntegerField(default=0)),
                ('caloric_intake', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nutrition Log',
                'verbose_name_plural': 'Nutrition Logs',
            },
        ),
        migrations.CreateModel(
            name='ExerciseSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_numb', models.IntegerField()),
                ('reps', models.IntegerField()),
                ('rest', models.IntegerField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FitnessAPI.Exercise')),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FitnessAPI.UserWorkoutLog')),
            ],
            options={
                'verbose_name': 'Exercise Set',
                'verbose_name_plural': 'Exercise Sets',
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='muscle_group',
            field=models.ManyToManyField(related_name='muscles', to='FitnessAPI.MuscleGroups'),
        ),
    ]
